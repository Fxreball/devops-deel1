name: Build and deploy app to Azure - helloworld-owen

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      start-time: ${{ steps.start-time.outputs.time }}
      end-time: ${{ steps.end-time.outputs.time }}
      job-status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v4

      - name: Record start time
        id: start-time
        run: echo "time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'

      - name: npm install, build, and test
        working-directory: ./backend
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present

      - name: Zip artifact for deployment
        working-directory: ./backend
        run: zip -r ../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

      - name: Record end time
        id: end-time
        run: echo "time=$(date +%s)" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    outputs:
      deploy-status: ${{ job.status }}
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'helloworld-owen'
          slot-name: 'Production'
          package: '.'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C1FAD1F90E1E4E5CB31AF2C06E136260 }}

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    steps:
      - name: Calculate build duration
        id: calc-duration
        run: |
          start=${{ needs.build.outputs.start-time }}
          end=${{ needs.build.outputs.end-time }}
          total=$((end - start))
          mins=$((total / 60))
          secs=$((total % 60))
          echo "duration=${mins}m ${secs}s" >> $GITHUB_OUTPUT

      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.mail.me.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Workflow ${{ github.workflow }} afgerond
          to: ${{ secrets.NOTIFY_EMAIL }}
          from: github-actions@yourdomain.com
          body: |
            Workflow: ${{ github.workflow }} is voltooid

            Build status:  ${{ needs.build.outputs.job-status }}
            Deploy status: ${{ needs.deploy.outputs.deploy-status }}

            Build duur:     ${{ steps.calc-duration.outputs.duration }}

            Bekijk run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
